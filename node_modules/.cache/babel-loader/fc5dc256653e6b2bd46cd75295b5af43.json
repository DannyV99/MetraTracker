{"ast":null,"code":"import _classCallCheck from \"/Users/daniel/Desktop/trainschedule/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/Desktop/trainschedule/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daniel/Desktop/trainschedule/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/Desktop/trainschedule/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daniel/Desktop/trainschedule/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daniel/Desktop/trainschedule/src/Weather.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar Weather =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Weather, _Component);\n\n  function Weather() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Weather)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: [],\n      clouds: [],\n      wind: [],\n      picture: []\n    };\n\n    _this.getWeather = function () {\n      fetch('http://localhost:4000/Weather').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          temperature: response.data[0].current.temperature\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n      fetch('http://localhost:4000/Weather').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          clouds: response.data[0].current.skytext\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n      fetch('http://localhost:4000/Weather').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          wind: response.data[0].current.winddisplay\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n      fetch('http://localhost:4000/WeatherPictures').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          picture: response.data\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.currentTime = function (a, b) {\n      var newDate = new Date();\n      var hours = newDate.getHours();\n      var minutes = newDate.getMinutes();\n      return minutes < 10 ? hours + \"0\" + minutes : hours + \"\" + minutes;\n    };\n\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var temperature = this.state.temperature;\n      var clouds = this.state.clouds;\n      var wind = this.state.wind;\n      var picture = this.state.picture;\n      var PIC_URL = {\n        picture: picture\n      }.picture.map(function (x) {\n        return x.url;\n      });\n\n      if (this.currentTime() < 1900 && this.currentTime() > 700) {\n        if ({\n          clouds: clouds\n        }.clouds === 'Sunny' || {\n          clouds: clouds\n        }.clouds === 'Mostly Clear') {\n          var SUNNY = React.createElement(\"img\", {\n            src: PIC_URL[1],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          });\n        } else if ({\n          clouds: clouds\n        }.clouds === 'Partly Sunny' || {\n          clouds: clouds\n        }.clouds === 'Mostly Sunny') {\n          var PART_SUNNY = React.createElement(\"img\", {\n            src: PIC_URL[0],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          });\n        } else if ({\n          clouds: clouds\n        }.clouds === 'Cloudy' || {\n          clouds: clouds\n        }.clouds === 'Mostly Cloudy') {\n          var CLOUDY = React.createElement(\"img\", {\n            src: PIC_URL[3],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        }\n      } else {\n        document.body.style.backgroundColor = \"#2d3d65\";\n        document.body.style.color = \"white\";\n        var NIGHT = React.createElement(\"img\", {\n          src: PIC_URL[2],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }\n\n      var NEWTIME = React.createElement(\"div\", {\n        style: \"text-align:center;padding:1em 0;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" \", React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: \"text-decoration:none;\",\n        href: \"https://www.zeitverschiebung.net/en/city/4887398\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: \"color:gray;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Current local time in\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \"Chicago, United States\")), \" \", React.createElement(\"iframe\", {\n        src: \"https://www.zeitverschiebung.net/clock-widget-iframe-v2?language=en&size=medium&timezone=America%2FChicago\",\n        width: \"100%\",\n        height: \"115\",\n        frameborder: \"0\",\n        seamless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \" \");\n      return React.createElement(\"div\", {\n        className: \"weatherDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MMM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Temp: \", temperature), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Conditions: \", clouds), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Wind: \", wind)), React.createElement(\"div\", {\n        className: \"picDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, SUNNY, NIGHT, PART_SUNNY, CLOUDY), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"METRA\")));\n    }\n  }]);\n\n  return Weather;\n}(Component);\n\nexport default Weather;","map":{"version":3,"sources":["/Users/daniel/Desktop/trainschedule/src/Weather.js"],"names":["React","Component","Weather","state","temperature","clouds","wind","picture","getWeather","fetch","then","response","json","setState","data","current","catch","err","console","error","skytext","winddisplay","currentTime","a","b","newDate","Date","hours","getHours","minutes","getMinutes","PIC_URL","map","x","url","SUNNY","PART_SUNNY","CLOUDY","document","body","style","backgroundColor","color","NIGHT","NEWTIME"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nclass Weather extends Component {\n\n    state = {\n        temperature: [],\n        clouds: [],\n        wind: [],\n        picture: []\n    }\n\n    componentDidMount() {\n        this.getWeather();\n    }\n\n    getWeather = () => {\n        fetch('http://localhost:4000/Weather')\n            .then(response => response.json())\n            .then(response => this.setState(\n                { temperature: response.data[0].current.temperature }))\n            .catch(err => console.error(err))\n\n        fetch('http://localhost:4000/Weather')\n            .then(response => response.json())\n            .then(response => this.setState(\n                { clouds: response.data[0].current.skytext }))\n            .catch(err => console.error(err))\n\n        fetch('http://localhost:4000/Weather')\n            .then(response => response.json())\n            .then(response => this.setState(\n                { wind: response.data[0].current.winddisplay }))\n            .catch(err => console.error(err))\n\n        fetch('http://localhost:4000/WeatherPictures')\n            .then(response => response.json())\n            .then(response => this.setState(\n                { picture: response.data }))\n            .catch(err => console.error(err))\n    }\n\n\n    currentTime = (a, b) => {\n        var newDate = new Date()\n        var hours = newDate.getHours()\n        var minutes = newDate.getMinutes()\n        return minutes < 10 ? hours + \"0\" + minutes : hours + \"\" + minutes;\n    }\n\n    render() {\n\n        const { temperature } = this.state;\n        const { clouds } = this.state;\n        const { wind } = this.state;\n        const { picture } = this.state;\n\n\n        const PIC_URL = { picture }.picture.map(x => x.url)\n\n\n        if (this.currentTime() < 1900 && this.currentTime() > 700) {\n            if ({ clouds }.clouds === 'Sunny' || { clouds }.clouds === 'Mostly Clear') {\n                var SUNNY = <img src={PIC_URL[1]}></img>\n            } else if ({ clouds }.clouds === 'Partly Sunny' || { clouds }.clouds === 'Mostly Sunny') {\n                var PART_SUNNY = <img src={PIC_URL[0]}></img>\n            } else if ({ clouds }.clouds === 'Cloudy' || { clouds }.clouds === 'Mostly Cloudy') {\n                var CLOUDY = <img src={PIC_URL[3]}></img>\n            }\n        } else {\n            document.body.style.backgroundColor = \"#2d3d65\";\n            document.body.style.color = \"white\";\n            var NIGHT = <img src={PIC_URL[2]}></img>\n        }\n\n        var NEWTIME = <div style=\"text-align:center;padding:1em 0;\"> <h3><a style=\"text-decoration:none;\" href=\"https://www.zeitverschiebung.net/en/city/4887398\"><span style=\"color:gray;\">Current local time in</span><br />Chicago, United States</a></h3> <iframe src=\"https://www.zeitverschiebung.net/clock-widget-iframe-v2?language=en&size=medium&timezone=America%2FChicago\" width=\"100%\" height=\"115\" frameborder=\"0\" seamless></iframe> </div>\n\n\n\n        \n\n\n        return (\n\n            <div className='weatherDiv'>\n                <div className=\"MMM\">\n                    <h1>Temp: {temperature}</h1>\n                    <h1>Conditions: {clouds}</h1>\n                    <h1>Wind: {wind}</h1>\n                </div>\n\n                <div className='picDiv'>\n                    {SUNNY}\n                    {NIGHT}\n                    {PART_SUNNY}\n                    {CLOUDY}\n                </div>\n                <div>\n                    <h1 className='title1'>METRA</h1>\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}